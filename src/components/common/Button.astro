---
export interface Props {
  variant?: 'primary' | 'secondary';
  href?: string;
  external?: boolean;
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const {
  variant = 'primary',
  href,
  external,
  size = 'md',
  class: className,
} = Astro.props;

const baseStyles = 'inline-flex items-center justify-center gap-2 font-bold border-2 border-[#333333] rounded-xl shadow-[4px_4px_0_#333333] hover:-translate-y-0.5 hover:-translate-x-0.5 hover:shadow-[6px_6px_0_#333333] transition-all duration-200';

const variantStyles = {
  primary: 'bg-[#f0db4e] hover:bg-[#f0db4e]/90',
  secondary: 'bg-white hover:bg-gray-50',
};

const sizeStyles = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3',
  lg: 'px-8 py-4 text-lg',
};

const classes = `${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${className || ''}`;

const externalProps = external
  ? { target: "_blank", rel: "noopener noreferrer" }
  : {};
---

{
  href ? (
    <a href={href} class={classes} {...externalProps}>
      <slot />
    </a>
  ) : (
    <button class={classes}>
      <slot />
    </button>
  )
}